/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-map-interaction";
exports.ids = ["vendor-chunks/react-map-interaction"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-map-interaction/dist/react-map-interaction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/react-map-interaction/dist/react-map-interaction.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\"), __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\n\telse {}\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_754__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_754__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_754__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_754__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_754__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_754__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_754__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_754__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_754__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_754__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_754__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_754__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_754__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_754__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_754__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_754__(__nested_webpack_require_754__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_4438__) {\n\n\"use strict\";\n__nested_webpack_require_4438__.r(__nested_webpack_exports__);\n\n// EXTERNAL MODULE: external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}\nvar external_commonjs_react_commonjs2_react_amd_React_root_React_ = __nested_webpack_require_4438__(1);\nvar external_commonjs_react_commonjs2_react_amd_React_root_React_default = /*#__PURE__*/__nested_webpack_require_4438__.n(external_commonjs_react_commonjs2_react_amd_React_root_React_);\n\n// EXTERNAL MODULE: external {\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"commonj2s\":\"prop-types\",\"amd\":\"prop-types\",\"root\":\"PropTypes\"}\nvar external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_ = __nested_webpack_require_4438__(0);\nvar external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default = /*#__PURE__*/__nested_webpack_require_4438__.n(external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_);\n\n// CONCATENATED MODULE: ./src/Controls.jsx\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\nvar Controls_Controls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Controls, _Component);\n\n  function Controls() {\n    _classCallCheck(this, Controls);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Controls).apply(this, arguments));\n  }\n\n  _createClass(Controls, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          plusBtnContents = _this$props.plusBtnContents,\n          minusBtnContents = _this$props.minusBtnContents,\n          btnClass = _this$props.btnClass,\n          plusBtnClass = _this$props.plusBtnClass,\n          minusBtnClass = _this$props.minusBtnClass,\n          controlsClass = _this$props.controlsClass,\n          scale = _this$props.scale,\n          minScale = _this$props.minScale,\n          maxScale = _this$props.maxScale,\n          onClickPlus = _this$props.onClickPlus,\n          onClickMinus = _this$props.onClickMinus,\n          disableZoom = _this$props.disableZoom;\n      var btnStyle = {\n        width: 30,\n        paddingTop: 5,\n        marginBottom: 5\n      };\n      var controlsStyle = controlsClass ? undefined : {\n        position: 'absolute',\n        right: 10,\n        top: 10\n      };\n\n      function plusHandler(e) {\n        e.preventDefault();\n        e.target.blur();\n        if (disableZoom) return;\n        onClickPlus();\n      }\n\n      function minusHandler(e) {\n        e.preventDefault();\n        e.target.blur();\n        if (disableZoom) return;\n        onClickMinus();\n      }\n\n      return external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(\"div\", {\n        style: controlsStyle,\n        className: controlsClass\n      }, external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(\"div\", null, external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(\"button\", {\n        ref: function ref(node) {\n          _this.plusNode = node;\n        },\n        onClick: plusHandler,\n        onTouchEnd: plusHandler,\n        className: [btnClass ? btnClass : '', plusBtnClass ? plusBtnClass : ''].join(' '),\n        type: \"button\",\n        style: btnClass || plusBtnClass ? undefined : btnStyle,\n        disabled: disableZoom || scale >= maxScale\n      }, plusBtnContents)), external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(\"div\", null, external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(\"button\", {\n        ref: function ref(node) {\n          _this.minusNode = node;\n        },\n        onClick: minusHandler,\n        onTouchEnd: minusHandler,\n        className: [btnClass ? btnClass : '', minusBtnClass ? minusBtnClass : ''].join(' '),\n        type: \"button\",\n        style: btnClass || minusBtnClass ? undefined : btnStyle,\n        disabled: disableZoom || scale <= minScale\n      }, minusBtnContents)));\n    }\n  }]);\n\n  return Controls;\n}(external_commonjs_react_commonjs2_react_amd_React_root_React_[\"Component\"]);\n\nControls_Controls.propTypes = {\n  onClickPlus: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.func.isRequired,\n  onClickMinus: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.func.isRequired,\n  plusBtnContents: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.node,\n  minusBtnContents: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.node,\n  btnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n  plusBtnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n  minusBtnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n  controlsClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n  scale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n  minScale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n  maxScale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n  disableZoom: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.bool\n};\nControls_Controls.defaultProps = {\n  plusBtnContents: '+',\n  minusBtnContents: '-',\n  disableZoom: false\n};\n/* harmony default export */ var src_Controls = (Controls_Controls);\n// CONCATENATED MODULE: ./src/geometry.js\nfunction clamp(min, value, max) {\n  return Math.max(min, Math.min(value, max));\n}\n\nfunction distance(p1, p2) {\n  var dx = p1.x - p2.x;\n  var dy = p1.y - p2.y;\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n}\n\nfunction midpoint(p1, p2) {\n  return {\n    x: (p1.x + p2.x) / 2,\n    y: (p1.y + p2.y) / 2\n  };\n}\n\nfunction touchPt(touch) {\n  return {\n    x: touch.clientX,\n    y: touch.clientY\n  };\n}\n\nfunction touchDistance(t0, t1) {\n  var p0 = touchPt(t0);\n  var p1 = touchPt(t1);\n  return distance(p0, p1);\n}\n\n\n// CONCATENATED MODULE: ./src/makePassiveEventOption.js\n// We want to make event listeners non-passive, and to do so have to check\n// that browsers support EventListenerOptions in the first place.\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\nvar passiveSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      passiveSupported = true;\n    }\n\n  };\n  window.addEventListener(\"test\", options, options);\n  window.removeEventListener(\"test\", options, options);\n} catch (_unused) {\n  passiveSupported = false;\n}\n\nfunction makePassiveEventOption(passive) {\n  return passiveSupported ? {\n    passive: passive\n  } : passive;\n}\n\n/* harmony default export */ var src_makePassiveEventOption = (makePassiveEventOption);\n// CONCATENATED MODULE: ./src/MapInteraction.jsx\nfunction MapInteraction_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { MapInteraction_typeof = function _typeof(obj) { return typeof obj; }; } else { MapInteraction_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return MapInteraction_typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction MapInteraction_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction MapInteraction_possibleConstructorReturn(self, call) { if (call && (MapInteraction_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return MapInteraction_assertThisInitialized(self); }\n\nfunction MapInteraction_getPrototypeOf(o) { MapInteraction_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return MapInteraction_getPrototypeOf(o); }\n\nfunction MapInteraction_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction MapInteraction_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction MapInteraction_createClass(Constructor, protoProps, staticProps) { if (protoProps) MapInteraction_defineProperties(Constructor.prototype, protoProps); if (staticProps) MapInteraction_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction MapInteraction_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) MapInteraction_setPrototypeOf(subClass, superClass); }\n\nfunction MapInteraction_setPrototypeOf(o, p) { MapInteraction_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return MapInteraction_setPrototypeOf(o, p); }\n\n\n\n\n\n // The amount that a value of a dimension will change given a new scale\n\nvar coordChange = function coordChange(coordinate, scaleRatio) {\n  return scaleRatio * coordinate - coordinate;\n};\n\nvar translationShape = external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.shape({\n  x: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n  y: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number\n});\n/*\n  This contains logic for providing a map-like interaction to any DOM node.\n  It allows a user to pinch, zoom, translate, etc, as they would an interactive map.\n  It renders its children with the current state of the translation and does not do any scaling\n  or translating on its own. This works on both desktop, and mobile.\n*/\n\nvar MapInteraction_MapInteractionControlled =\n/*#__PURE__*/\nfunction (_Component) {\n  MapInteraction_inherits(MapInteractionControlled, _Component);\n\n  MapInteraction_createClass(MapInteractionControlled, null, [{\n    key: \"propTypes\",\n    get: function get() {\n      return {\n        // The content that will be transformed\n        children: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.func,\n        // This is a controlled component\n        value: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.shape({\n          scale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number.isRequired,\n          translation: translationShape.isRequired\n        }).isRequired,\n        onChange: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.func.isRequired,\n        disableZoom: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.bool,\n        disablePan: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.bool,\n        translationBounds: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.shape({\n          xMin: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n          xMax: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n          yMin: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n          yMax: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number\n        }),\n        minScale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n        maxScale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n        showControls: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.bool,\n        plusBtnContents: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.node,\n        minusBtnContents: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.node,\n        btnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n        plusBtnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n        minusBtnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n        controlsClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string\n      };\n    }\n  }, {\n    key: \"defaultProps\",\n    get: function get() {\n      return {\n        minScale: 0.05,\n        maxScale: 3,\n        showControls: false,\n        translationBounds: {},\n        disableZoom: false,\n        disablePan: false\n      };\n    }\n  }]);\n\n  function MapInteractionControlled(props) {\n    var _this;\n\n    MapInteraction_classCallCheck(this, MapInteractionControlled);\n\n    _this = MapInteraction_possibleConstructorReturn(this, MapInteraction_getPrototypeOf(MapInteractionControlled).call(this, props));\n    _this.state = {\n      shouldPreventTouchEndDefault: false\n    };\n    _this.startPointerInfo = undefined;\n    _this.onMouseDown = _this.onMouseDown.bind(MapInteraction_assertThisInitialized(_this));\n    _this.onTouchStart = _this.onTouchStart.bind(MapInteraction_assertThisInitialized(_this));\n    _this.onMouseMove = _this.onMouseMove.bind(MapInteraction_assertThisInitialized(_this));\n    _this.onTouchMove = _this.onTouchMove.bind(MapInteraction_assertThisInitialized(_this));\n    _this.onMouseUp = _this.onMouseUp.bind(MapInteraction_assertThisInitialized(_this));\n    _this.onTouchEnd = _this.onTouchEnd.bind(MapInteraction_assertThisInitialized(_this));\n    _this.onWheel = _this.onWheel.bind(MapInteraction_assertThisInitialized(_this));\n    return _this;\n  }\n\n  MapInteraction_createClass(MapInteractionControlled, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var passiveOption = src_makePassiveEventOption(false);\n      this.getContainerNode().addEventListener('wheel', this.onWheel, passiveOption);\n      /*\n        Setup events for the gesture lifecycle: start, move, end touch\n      */\n      // start gesture\n\n      this.getContainerNode().addEventListener('touchstart', this.onTouchStart, passiveOption);\n      this.getContainerNode().addEventListener('mousedown', this.onMouseDown, passiveOption); // move gesture\n\n      window.addEventListener('touchmove', this.onTouchMove, passiveOption);\n      window.addEventListener('mousemove', this.onMouseMove, passiveOption); // end gesture\n\n      var touchAndMouseEndOptions = _objectSpread({\n        capture: true\n      }, passiveOption);\n\n      window.addEventListener('touchend', this.onTouchEnd, touchAndMouseEndOptions);\n      window.addEventListener('mouseup', this.onMouseUp, touchAndMouseEndOptions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.getContainerNode().removeEventListener('wheel', this.onWheel); // Remove touch events\n\n      this.getContainerNode().removeEventListener('touchstart', this.onTouchStart);\n      window.removeEventListener('touchmove', this.onTouchMove);\n      window.removeEventListener('touchend', this.onTouchEnd); // Remove mouse events\n\n      this.getContainerNode().removeEventListener('mousedown', this.onMouseDown);\n      window.removeEventListener('mousemove', this.onMouseMove);\n      window.removeEventListener('mouseup', this.onMouseUp);\n    }\n    /*\n      Event handlers\n       All touch/mouse handlers preventDefault because we add\n      both touch and mouse handlers in the same session to support devicse\n      with both touch screen and mouse inputs. The browser may fire both\n      a touch and mouse event for a *single* user action, so we have to ensure\n      that only one handler is used by canceling the event in the first handler.\n       https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent\n    */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(e) {\n      e.preventDefault();\n      this.setPointerState([e]);\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(e) {\n      e.preventDefault();\n      this.setPointerState(e.touches);\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(e) {\n      this.setPointerState();\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(e) {\n      this.setPointerState(e.touches);\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(e) {\n      if (!this.startPointerInfo || this.props.disablePan) {\n        return;\n      }\n\n      e.preventDefault();\n      this.onDrag(e);\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(e) {\n      if (!this.startPointerInfo) {\n        return;\n      }\n\n      e.preventDefault();\n      var _this$props = this.props,\n          disablePan = _this$props.disablePan,\n          disableZoom = _this$props.disableZoom;\n      var isPinchAction = e.touches.length == 2 && this.startPointerInfo.pointers.length > 1;\n\n      if (isPinchAction && !disableZoom) {\n        this.scaleFromMultiTouch(e);\n      } else if (e.touches.length === 1 && this.startPointerInfo && !disablePan) {\n        this.onDrag(e.touches[0]);\n      }\n    } // handles both touch and mouse drags\n\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(pointer) {\n      var _this2 = this;\n\n      var _this$startPointerInf = this.startPointerInfo,\n          translation = _this$startPointerInf.translation,\n          pointers = _this$startPointerInf.pointers;\n      var startPointer = pointers[0];\n      var dragX = pointer.clientX - startPointer.clientX;\n      var dragY = pointer.clientY - startPointer.clientY;\n      var newTranslation = {\n        x: translation.x + dragX,\n        y: translation.y + dragY\n      };\n      var shouldPreventTouchEndDefault = Math.abs(dragX) > 1 || Math.abs(dragY) > 1;\n      this.setState({\n        shouldPreventTouchEndDefault: shouldPreventTouchEndDefault\n      }, function () {\n        _this2.props.onChange({\n          scale: _this2.props.value.scale,\n          translation: _this2.clampTranslation(newTranslation)\n        });\n      });\n    }\n  }, {\n    key: \"onWheel\",\n    value: function onWheel(e) {\n      if (this.props.disableZoom) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n      var scaleChange = Math.pow(2, e.deltaY * 0.002);\n      var newScale = clamp(this.props.minScale, this.props.value.scale + (1 - scaleChange), this.props.maxScale);\n      var mousePos = this.clientPosToTranslatedPos({\n        x: e.clientX,\n        y: e.clientY\n      });\n      this.scaleFromPoint(newScale, mousePos);\n    }\n  }, {\n    key: \"setPointerState\",\n    value: function setPointerState(pointers) {\n      if (!pointers || pointers.length === 0) {\n        this.startPointerInfo = undefined;\n        return;\n      }\n\n      this.startPointerInfo = {\n        pointers: pointers,\n        scale: this.props.value.scale,\n        translation: this.props.value.translation\n      };\n    }\n  }, {\n    key: \"clampTranslation\",\n    value: function clampTranslation(desiredTranslation) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;\n      var x = desiredTranslation.x,\n          y = desiredTranslation.y;\n      var _props$translationBou = props.translationBounds,\n          xMax = _props$translationBou.xMax,\n          xMin = _props$translationBou.xMin,\n          yMax = _props$translationBou.yMax,\n          yMin = _props$translationBou.yMin;\n      xMin = xMin != undefined ? xMin : -Infinity;\n      yMin = yMin != undefined ? yMin : -Infinity;\n      xMax = xMax != undefined ? xMax : Infinity;\n      yMax = yMax != undefined ? yMax : Infinity;\n      return {\n        x: clamp(xMin, x, xMax),\n        y: clamp(yMin, y, yMax)\n      };\n    }\n  }, {\n    key: \"translatedOrigin\",\n    value: function translatedOrigin() {\n      var translation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.value.translation;\n      var clientOffset = this.getContainerBoundingClientRect();\n      return {\n        x: clientOffset.left + translation.x,\n        y: clientOffset.top + translation.y\n      };\n    } // From a given screen point return it as a point\n    // in the coordinate system of the given translation\n\n  }, {\n    key: \"clientPosToTranslatedPos\",\n    value: function clientPosToTranslatedPos(_ref) {\n      var x = _ref.x,\n          y = _ref.y;\n      var translation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props.value.translation;\n      var origin = this.translatedOrigin(translation);\n      return {\n        x: x - origin.x,\n        y: y - origin.y\n      };\n    }\n  }, {\n    key: \"scaleFromPoint\",\n    value: function scaleFromPoint(newScale, focalPt) {\n      var _this$props$value = this.props.value,\n          translation = _this$props$value.translation,\n          scale = _this$props$value.scale;\n      var scaleRatio = newScale / (scale != 0 ? scale : 1);\n      var focalPtDelta = {\n        x: coordChange(focalPt.x, scaleRatio),\n        y: coordChange(focalPt.y, scaleRatio)\n      };\n      var newTranslation = {\n        x: translation.x - focalPtDelta.x,\n        y: translation.y - focalPtDelta.y\n      };\n      this.props.onChange({\n        scale: newScale,\n        translation: this.clampTranslation(newTranslation)\n      });\n    } // Given the start touches and new e.touches, scale and translate\n    // such that the initial midpoint remains as the new midpoint. This is\n    // to achieve the effect of keeping the content that was directly\n    // in the middle of the two fingers as the focal point throughout the zoom.\n\n  }, {\n    key: \"scaleFromMultiTouch\",\n    value: function scaleFromMultiTouch(e) {\n      var startTouches = this.startPointerInfo.pointers;\n      var newTouches = e.touches; // calculate new scale\n\n      var dist0 = touchDistance(startTouches[0], startTouches[1]);\n      var dist1 = touchDistance(newTouches[0], newTouches[1]);\n      var scaleChange = dist1 / dist0;\n      var startScale = this.startPointerInfo.scale;\n      var targetScale = startScale + (scaleChange - 1) * startScale;\n      var newScale = clamp(this.props.minScale, targetScale, this.props.maxScale); // calculate mid points\n\n      var startMidpoint = midpoint(touchPt(startTouches[0]), touchPt(startTouches[1]));\n      var newMidPoint = midpoint(touchPt(newTouches[0]), touchPt(newTouches[1])); // The amount we need to translate by in order for\n      // the mid point to stay in the middle (before thinking about scaling factor)\n\n      var dragDelta = {\n        x: newMidPoint.x - startMidpoint.x,\n        y: newMidPoint.y - startMidpoint.y\n      };\n      var scaleRatio = newScale / startScale; // The point originally in the middle of the fingers on the initial zoom start\n\n      var focalPt = this.clientPosToTranslatedPos(startMidpoint, this.startPointerInfo.translation); // The amount that the middle point has changed from this scaling\n\n      var focalPtDelta = {\n        x: coordChange(focalPt.x, scaleRatio),\n        y: coordChange(focalPt.y, scaleRatio)\n      }; // Translation is the original translation, plus the amount we dragged,\n      // minus what the scaling will do to the focal point. Subtracting the\n      // scaling factor keeps the midpoint in the middle of the touch points.\n\n      var newTranslation = {\n        x: this.startPointerInfo.translation.x - focalPtDelta.x + dragDelta.x,\n        y: this.startPointerInfo.translation.y - focalPtDelta.y + dragDelta.y\n      };\n      this.props.onChange({\n        scale: newScale,\n        translation: this.clampTranslation(newTranslation)\n      });\n    }\n  }, {\n    key: \"discreteScaleStepSize\",\n    value: function discreteScaleStepSize() {\n      var _this$props2 = this.props,\n          minScale = _this$props2.minScale,\n          maxScale = _this$props2.maxScale;\n      var delta = Math.abs(maxScale - minScale);\n      return delta / 10;\n    } // Scale using the center of the content as a focal point\n\n  }, {\n    key: \"changeScale\",\n    value: function changeScale(delta) {\n      var targetScale = this.props.value.scale + delta;\n      var _this$props3 = this.props,\n          minScale = _this$props3.minScale,\n          maxScale = _this$props3.maxScale;\n      var scale = clamp(minScale, targetScale, maxScale);\n      var rect = this.getContainerBoundingClientRect();\n      var x = rect.left + rect.width / 2;\n      var y = rect.top + rect.height / 2;\n      var focalPoint = this.clientPosToTranslatedPos({\n        x: x,\n        y: y\n      });\n      this.scaleFromPoint(scale, focalPoint);\n    } // Done like this so it is mockable\n\n  }, {\n    key: \"getContainerNode\",\n    value: function getContainerNode() {\n      return this.containerNode;\n    }\n  }, {\n    key: \"getContainerBoundingClientRect\",\n    value: function getContainerBoundingClientRect() {\n      return this.getContainerNode().getBoundingClientRect();\n    }\n  }, {\n    key: \"renderControls\",\n    value: function renderControls() {\n      var _this3 = this;\n\n      var step = this.discreteScaleStepSize();\n      return external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(src_Controls, {\n        onClickPlus: function onClickPlus() {\n          return _this3.changeScale(step);\n        },\n        onClickMinus: function onClickMinus() {\n          return _this3.changeScale(-step);\n        },\n        plusBtnContents: this.props.plusBtnContents,\n        minusBtnContents: this.props.minusBtnContents,\n        btnClass: this.props.btnClass,\n        plusBtnClass: this.props.plusBtnClass,\n        minusBtnClass: this.props.minusBtnClass,\n        controlsClass: this.props.controlsClass,\n        scale: this.props.value.scale,\n        minScale: this.props.minScale,\n        maxScale: this.props.maxScale,\n        disableZoom: this.props.disableZoom\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          showControls = _this$props4.showControls,\n          children = _this$props4.children;\n      var scale = this.props.value.scale; // Defensively clamp the translation. This should not be necessary if we properly set state elsewhere.\n\n      var translation = this.clampTranslation(this.props.value.translation);\n      /*\n        This is a little trick to allow the following ux: We want the parent of this\n        component to decide if elements inside the map are clickable. Normally, you wouldn't\n        want to trigger a click event when the user *drags* on an element (only if they click\n        and then release w/o dragging at all). However we don't want to assume this\n        behavior here, so we call `preventDefault` and then let the parent check\n        `e.defaultPrevented`. That value being true means that we are signalling that\n        a drag event ended, not a click.\n      */\n\n      var handleEventCapture = function handleEventCapture(e) {\n        if (_this4.state.shouldPreventTouchEndDefault) {\n          e.preventDefault();\n\n          _this4.setState({\n            shouldPreventTouchEndDefault: false\n          });\n        }\n      };\n\n      return external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(\"div\", {\n        ref: function ref(node) {\n          _this4.containerNode = node;\n        },\n        style: {\n          height: '100%',\n          width: '100%',\n          position: 'relative',\n          // for absolutely positioned children\n          touchAction: 'none'\n        },\n        onClickCapture: handleEventCapture,\n        onTouchEndCapture: handleEventCapture\n      }, (children || undefined) && children({\n        translation: translation,\n        scale: scale\n      }), (showControls || undefined) && this.renderControls());\n    }\n  }]);\n\n  return MapInteractionControlled;\n}(external_commonjs_react_commonjs2_react_amd_React_root_React_[\"Component\"]);\n/*\n  Main entry point component.\n  Determines if it's parent is controlling (eg it manages state) or leaving us uncontrolled\n  (eg we manage our own internal state)\n*/\n\nvar MapInteraction_MapInteractionController =\n/*#__PURE__*/\nfunction (_Component2) {\n  MapInteraction_inherits(MapInteractionController, _Component2);\n\n  MapInteraction_createClass(MapInteractionController, null, [{\n    key: \"propTypes\",\n    get: function get() {\n      return {\n        children: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.func,\n        value: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.shape({\n          scale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number.isRequired,\n          translation: translationShape.isRequired\n        }),\n        defaultValue: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.shape({\n          scale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number.isRequired,\n          translation: translationShape.isRequired\n        }),\n        disableZoom: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.bool,\n        disablePan: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.bool,\n        onChange: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.func,\n        translationBounds: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.shape({\n          xMin: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n          xMax: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n          yMin: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n          yMax: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number\n        }),\n        minScale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n        maxScale: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.number,\n        showControls: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.bool,\n        plusBtnContents: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.node,\n        minusBtnContents: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.node,\n        btnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n        plusBtnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n        minusBtnClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string,\n        controlsClass: external_commonjs_prop_types_commonjs2_prop_types_commonj2s_prop_types_amd_prop_types_root_PropTypes_default.a.string\n      };\n    }\n  }]);\n\n  function MapInteractionController(props) {\n    var _this5;\n\n    MapInteraction_classCallCheck(this, MapInteractionController);\n\n    _this5 = MapInteraction_possibleConstructorReturn(this, MapInteraction_getPrototypeOf(MapInteractionController).call(this, props));\n    var controlled = MapInteractionController.isControlled(props);\n\n    if (controlled) {\n      _this5.state = {\n        lastKnownValueFromProps: props.value\n      };\n    } else {\n      // Set the necessary state for controlling map interaction ourselves\n      _this5.state = {\n        value: props.defaultValue || {\n          scale: 1,\n          translation: {\n            x: 0,\n            y: 0\n          }\n        },\n        lastKnownValueFromProps: undefined\n      };\n    }\n\n    return _this5;\n  }\n  /*\n    Handle the parent switchg form controlled to uncontrolled or vice versa.\n    This is at most a best-effort attempt. It is not gauranteed by our API\n    but it will do its best to maintain the state such that if the parent\n    accidentally switches between controlled/uncontrolled there won't be\n    any jankiness or jumpiness.\n     This tries to mimick how the React <input /> component behaves.\n  */\n\n\n  MapInteraction_createClass(MapInteractionController, [{\n    key: \"innerProps\",\n    // The subset of this component's props that need to be passed\n    // down to the core RMI component\n    value: function innerProps() {\n      var _this$props5 = this.props,\n          value = _this$props5.value,\n          defaultValue = _this$props5.defaultValue,\n          onChange = _this$props5.onChange,\n          innerProps = _objectWithoutProperties(_this$props5, [\"value\", \"defaultValue\", \"onChange\"]);\n\n      return innerProps;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var controlled = MapInteractionController.isControlled(this.props);\n      return controlled ? this.props.value : this.state.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$props6 = this.props,\n          _onChange = _this$props6.onChange,\n          children = _this$props6.children;\n      var controlled = MapInteractionController.isControlled(this.props);\n      var value = controlled ? this.props.value : this.state.value;\n      return external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(MapInteraction_MapInteractionControlled, _extends({\n        onChange: function onChange(value) {\n          controlled ? _onChange(value) : _this6.setState({\n            value: value\n          });\n        },\n        value: value\n      }, this.innerProps()), children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var nowControlled = MapInteractionController.isControlled(props);\n      var wasControlled = state.lastKnownValueFromProps && MapInteractionController.isControlled({\n        value: state.lastKnownValueFromProps\n      });\n      /*\n        State transitions:\n          uncontrolled --> controlled   (unset internal state, set last props from parent)\n          controlled   --> uncontrolled (set internal state to last props from parent)\n          controlled   --> controlled   (update last props from parent)\n          uncontrolled --> uncontrolled (do nothing)\n         Note that the second two (no change in control) will also happen on the\n        initial render because we set lastKnownValueFromProps in the constructor.\n      */\n\n      if (!wasControlled && nowControlled) {\n        return {\n          value: undefined,\n          lastKnownValueFromProps: props.value\n        };\n      } else if (wasControlled && !nowControlled) {\n        return {\n          value: state.lastKnownValueFromProps,\n          lastKnownValueFromProps: undefined\n        };\n      } else if (wasControlled && nowControlled) {\n        return {\n          lastKnownValueFromProps: props.value\n        };\n      } else if (!wasControlled && !nowControlled) {\n        return null;\n      }\n    }\n  }, {\n    key: \"isControlled\",\n    value: function isControlled(props) {\n      // Similar to React's <input /> API, setting a value declares\n      // that you want to control this component.\n      return props.value != undefined;\n    }\n  }]);\n\n  return MapInteractionController;\n}(external_commonjs_react_commonjs2_react_amd_React_root_React_[\"Component\"]);\n\n/* harmony default export */ var MapInteraction = (MapInteraction_MapInteractionController);\n// CONCATENATED MODULE: ./src/MapInteractionCSS.jsx\n\n\n/*\n  This component provides a map like interaction to any content that you place in it. It will let\n  the user zoom and pan the children by scaling and translating props.children using css.\n*/\n\nvar MapInteractionCSS_MapInteractionCSS = function MapInteractionCSS(props) {\n  return external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(MapInteraction, props, function (_ref) {\n    var translation = _ref.translation,\n        scale = _ref.scale;\n    // Translate first and then scale.  Otherwise, the scale would affect the translation.\n    var transform = \"translate(\".concat(translation.x, \"px, \").concat(translation.y, \"px) scale(\").concat(scale, \")\");\n    return external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(\"div\", {\n      style: {\n        height: '100%',\n        width: '100%',\n        position: 'relative',\n        // for absolutely positioned children\n        overflow: 'hidden',\n        touchAction: 'none',\n        // Not supported in Safari :(\n        msTouchAction: 'none',\n        cursor: 'all-scroll',\n        WebkitUserSelect: 'none',\n        MozUserSelect: 'none',\n        msUserSelect: 'none'\n      }\n    }, external_commonjs_react_commonjs2_react_amd_React_root_React_default.a.createElement(\"div\", {\n      style: {\n        display: 'inline-block',\n        // size to content\n        transform: transform,\n        transformOrigin: '0 0 '\n      }\n    }, props.children));\n  });\n};\n\n/* harmony default export */ var src_MapInteractionCSS = (MapInteractionCSS_MapInteractionCSS);\n// CONCATENATED MODULE: ./src/index.js\n/* concated harmony reexport MapInteractionCSS */__nested_webpack_require_4438__.d(__nested_webpack_exports__, \"MapInteractionCSS\", function() { return src_MapInteractionCSS; });\n/* concated harmony reexport MapInteraction */__nested_webpack_require_4438__.d(__nested_webpack_exports__, \"MapInteraction\", function() { return MapInteraction; });\n\n\n\n/* harmony default export */ var src = __nested_webpack_exports__[\"default\"] = (MapInteraction);\n\n/***/ })\n/******/ ]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-map-interaction/dist/react-map-interaction.js\n");

/***/ })

};
;